// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Size {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
}

model OrderItem {
  id          String    @id @default(uuid()) @db.Uuid
  order_id    String    @db.Uuid
  product_id  String    @db.Uuid
  quantity    Int
  price       Float
  observation String?
  size        Size      @default(S)
  item_total  Float
  order       Order     @relation(fields: [order_id], references: [id])
  product     Product   @relation(fields: [product_id], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime? @db.Timestamp // Nullable for soft delete
}

model Order {
  id            String      @id @default(uuid()) @db.Uuid
  customerId    String      @db.Uuid
  total         Float
  customer      Customer    @relation(fields: [customerId], references: [id])
  observation   String? // Add this line to the model
  delivery_cost Float? // Nullable delivery cost field
  is_to_office  Boolean     @default(false)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  deletedAt     DateTime?   @db.Timestamp // Nullable field for soft deletion
  items         OrderItem[]
}

model Customer {
  id        String    @id @default(uuid()) @db.Uuid
  name      String
  phone     String?
  address   Json?
  orders    Order[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime? @db.Timestamp // Nullable field for soft deletion
}

model Product {
  id          String      @id @default(uuid()) @db.Uuid
  name        String
  description String?
  price       Float
  image       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   DateTime?   @db.Timestamp // Nullable field for soft deletion
  OrderItem   OrderItem[]
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  name      String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime? @db.Timestamp // Nullable field for soft deletion
}
